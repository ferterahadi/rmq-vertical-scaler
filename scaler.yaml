---
# ServiceAccount for the scaler
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rmq-vertical-scaler-nodejs-sa
  namespace: prod
---
# Role for vertical scaling operations
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: rmq-vertical-scaler-nodejs-role
  namespace: prod
rules:
  - apiGroups: ['rabbitmq.com']
    resources: ['rabbitmqclusters']
    verbs: ['get', 'patch', 'update']
  - apiGroups: ['']
    resources: ['secrets']
    verbs: ['get']
  - apiGroups: ['']
    resources: ['configmaps']
    verbs: ['get', 'create', 'update', 'patch']
---
# RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: rmq-vertical-scaler-nodejs-binding
  namespace: prod
subjects:
  - kind: ServiceAccount
    name: rmq-vertical-scaler-nodejs-sa
    namespace: prod
roleRef:
  kind: Role
  name: rmq-vertical-scaler-nodejs-role
  apiGroup: rbac.authorization.k8s.io
---
# PodDisruptionBudget to ensure only 1 pod scaling at a time
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: rmq-pdb
  namespace: prod
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: rmq-vertical-scaler-nodejs
---
# Deployment for the vertical scaler
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rmq-vertical-scaler-nodejs
  namespace: prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rmq-vertical-scaler-nodejs
  template:
    metadata:
      labels:
        app: rmq-vertical-scaler-nodejs
    spec:
      serviceAccountName: rmq-vertical-scaler-nodejs-sa
      containers:
        - name: scaler
          image: your-registry/rmq-vertical-scaler:v1.0.0 # Replace with your actual registry
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 75m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 512Mi
          env:
            # RabbitMQ credentials from secret
            - name: RMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rmq-default-user
                  key: username
            - name: RMQ_PASS
              valueFrom:
                secretKeyRef:
                  name: rmq-default-user
                  key: password
            # RabbitMQ connection settings
            - name: RMQ_HOST
              value: 'rmq.prod.svc.cluster.local'
            - name: RMQ_PORT
              value: '15672'
            # Threshold settings
            - name: QUEUE_THRESHOLD_LOW
              value: '1000'
            - name: QUEUE_THRESHOLD_MEDIUM
              value: '2000'
            - name: QUEUE_THRESHOLD_HIGH
              value: '10000'
            - name: QUEUE_THRESHOLD_CRITICAL
              value: '50000'
            - name: RATE_THRESHOLD_LOW
              value: '20'
            - name: RATE_THRESHOLD_MEDIUM
              value: '200'
            - name: RATE_THRESHOLD_HIGH
              value: '1000'
            - name: RATE_THRESHOLD_CRITICAL
              value: '2000'
            # Resource profiles
            - name: PROFILE_LOW_CPU
              value: '330m'
            - name: PROFILE_LOW_MEMORY
              value: '2Gi'
            - name: PROFILE_MEDIUM_CPU
              value: '800m'
            - name: PROFILE_MEDIUM_MEMORY
              value: '3Gi'
            - name: PROFILE_HIGH_CPU
              value: '1600m'
            - name: PROFILE_HIGH_MEMORY
              value: '4Gi'
            - name: PROFILE_CRITICAL_CPU
              value: '2400m'
            - name: PROFILE_CRITICAL_MEMORY
              value: '8Gi'
            # Debounce settings
            - name: DEBOUNCE_SCALE_UP_SECONDS
              value: '30'
            - name: DEBOUNCE_SCALE_DOWN_MINUTES
              value: '2'
            # Check interval
            - name: CHECK_INTERVAL_SECONDS
              value: '5'
      nodeSelector:
        cloud.google.com/gke-spot: 'true'
      restartPolicy: Always
